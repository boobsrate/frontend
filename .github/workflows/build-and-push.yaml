name: Create and publish a Docker image

on:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ["self-hosted"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract branch name
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Install NPM dependencies
        run: npm install

      - name: Build NPM project master
        if: steps.extract_branch.outputs.branch == 'master'
        run: npm run build

      - name: Build NPM project dev
        if: steps.extract_branch.outputs.branch != 'master'
        run: npm run build-dev

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha
          flavor: |
            latest=${{ steps.extract_branch.outputs.branch == 'master' }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Form values file
        id: form_values_file
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ steps.extract_branch.outputs.branch == 'master' }}
          if_true: values-prod.yaml
          if_false: values-dev.yaml

      - name: Form namespace
        id: form_namespace
        uses: haya14busa/action-cond@v1
        with:
          cond: ${{ steps.extract_branch.outputs.branch == 'master' }}
          if_true: boobsrate
          if_false: boobsrate-dev

      - name: Install/upgrade helm chart to Kubernetes cluster 
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
        run: |
          helm3 upgrade boobsrate-frontend ./deploy/boobsrate-frontend \
            --wait \
            --install \
            -f ./deploy/boobsrate-frontend/${{steps.form_values_file.outputs.value}} \
            -n ${{steps.form_namespace.outputs.value}} \
            --set image.name=${{ steps.meta.outputs.tags }} \
            --timeout 5m0s \
            --debug
